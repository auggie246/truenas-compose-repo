services:
  vllm-openai-coder:
    container_name: vllm
    image: vllm/vllm-openai:${VLLM_DOCKER_TAG-latest}
    restart: unless-stopped
    tty: true
    networks: 
      - proxy
    # Uncomment below to expose VLLM API outside the container stack
    # ports:
    #   - ${VLLM_PORT}:8000
    ipc: host
  volumes:
      - ${STACKS_DIR}/.cache/huggingface:/root/.cache/huggingface
      - ${STACKS_DIR}/template_deepseek_vl2.jinja:/root/template_deepseek_vl2.jinja
    environment:
      - HF_HUB_ENABLE_HF_TRANSFER=0
    env_file: ".env"
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    command: >
      --model deepseek-ai/deepseek-vl2-tiny
      --hf_overrides '{"architectures":["DeepseekVLV2ForCausalLM"]}' 
      --chat-template /root/template_deepseek_vl2.jinja

  open-webui:
    container_name: open-webui
    environment:
      # - ENABLE_RAG_WEB_SEARCH=true
      # - RAG_WEB_SEARCH_ENGINE=duckduckgo
      # - IMAGE_GENERATION_ENGINE=comfyui
      # - COMFYUI_BASE_URL=http://<your-ip>:<comfy-port>
      # - ENABLE_OLLAMA_API=false
      # - OPENAI_API_KEY=aaaaa
      # - ENABLE_IMAGE_GENERATION=true
      # - IMAGE_SIZE=1024x1024
      # - IMAGE_GENERATION_MODEL=Stable Diffusion 3 - Medium
      # - WHISPER_MODEL=large
      - OPENAI_API_BASE_URL=http://vllm-openai-coder:8000/v1
    depends_on:
      - vllm-openai-coder
    volumes:
      - ${STACKS_DIR}/open-webui:/app/backend/data
    ports:
      - ${OPEN_WEBUI_PORT-3000}:${PORT}
    env_file: ".env"
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: always
    image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG-main}
    networks: 
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.open-webui.entrypoints=http-external"
      - "traefik.http.routers.open-webui.rule=Host(`chatbot.YOUR_DOMAIN.co.uk`)"
      - "traefik.http.middlewares.open-webui-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.open-webui.middlewares=open-webui-https-redirect"
      - "traefik.http.routers.open-webui-secure.entrypoints=https-external"
      - "traefik.http.routers.open-webui-secure.rule=Host(`chatbot.YOUR_DOMAIN.co.uk`)"
      - "traefik.http.routers.open-webui-secure.tls=true"
      - "traefik.http.routers.open-webui-secure.service=open-webui"
      - "traefik.http.services.open-webui.loadbalancer.server.port=${PORT}"
      - "traefik.docker.network=proxy"

networks:
  proxy:
    external: true    